{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","console","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","tactors","status_code","match","params","crew","filter","member","job","actors","cast","location","runtime","NotFound","App","basename","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c45f540.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='rmdb-header'>\r\n      <div className='rmdb-header-content'>\r\n        <Link to='/'>\r\n          <img\r\n            className='rmdb-logo'\r\n            src='./images/reactMovie_logo.png'\r\n            alt='rmdb-logo'\r\n          />\r\n        </Link>\r\n        <img\r\n          className='rmdb-tmdb-logo'\r\n          src='./images/tmdb_logo.png'\r\n          alt='tmdb-logo'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '80faeed29774475c8bb74497be2603c8';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = props => {\r\n  return (\r\n    <div\r\n      className='rmdb-heroimage'\r\n      style={{\r\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n        39%,rgba(0,0,0,0)\r\n        41%,rgba(0,0,0,0.65)\r\n        100%),\r\n        url('${props.image}'), #1c1c1c`\r\n      }}\r\n    >\r\n      <div className='rmdb-heroimage-content'>\r\n        <div className='rmdb-heroimage-text'>\r\n          <h1>{props.title}</h1>\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroImage;\r\n","import React, { Component } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: ''\r\n  };\r\n\r\n  timeout = null;\r\n\r\n  doSearch = event => {\r\n    this.setState({ value: event.target.value });\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.props.callback(this.state.value);\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='rmdb-searchbar'>\r\n        <div className='rmdb-searchbar-content'>\r\n          <FontAwesome className='rmdb-fa-search' name='search' size='2x' />\r\n          <input\r\n            type='text'\r\n            className='rmdb-searchbar-input'\r\n            placeholder='Search'\r\n            onChange={this.doSearch}\r\n            value={this.state.value}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = props => {\r\n  const renderElements = () => {\r\n    const gridElements = props.children.map((element, i) => {\r\n      return (\r\n        <div key={i} className='rmdb-grid-element'>\r\n          {element}\r\n        </div>\r\n      );\r\n    });\r\n    return gridElements;\r\n  };\r\n\r\n  return (\r\n    <div className='rmdb-grid'>\r\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n      <div className='rmdb-grid-content'>{renderElements()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFourColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool\r\n};\r\n\r\nexport default FourColGrid;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = props => {\r\n  return (\r\n    <div className='rmdb-moviethumb'>\r\n      {props.clickable ? (\r\n        <Link\r\n          to={{\r\n            pathname: `/${props.movieId}`,\r\n            movieName: `${props.movieName}`\r\n          }}\r\n        >\r\n          <img src={props.image} alt='moviethumb' />\r\n        </Link>\r\n      ) : (\r\n        <img src={props.image} alt='moviethumb' />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string\r\n};\r\n\r\nexport default MovieThumb;\r\n","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = props => {\r\n  return (\r\n    <div className='rmdb-loadmorebtn' onClick={props.onClick}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return <div className='loader'></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  POSTER_SIZE,\r\n  BACKDROP_SIZE\r\n} from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem('HomeState')) {\r\n      const state = JSON.parse(localStorage.getItem('HomeState'));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  searchItems = searchTerm => {\r\n    // console.log(searchTerm);\r\n    let endpoint = '';\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    });\r\n\r\n    if (searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = '';\r\n    this.setState({ loading: true });\r\n\r\n    if (this.state.searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\r\n        .state.currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${\r\n        this.state.searchTerm\r\n      }&page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  fetchItems = endpoint => {\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.setState(\r\n          {\r\n            movies: [...this.state.movies, ...result.results],\r\n            heroImage: this.state.heroImage || result.results[0],\r\n            loading: false,\r\n            currentPage: result.page,\r\n            totalPages: result.total_pages\r\n          },\r\n          () => {\r\n            if (this.state.searchTerm === '') {\r\n              localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n            }\r\n          }\r\n        );\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='rmdb-home'>\r\n        {this.state.heroImage ? (\r\n          <div>\r\n            <HeroImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n              title={this.state.heroImage.original_title}\r\n              text={this.state.heroImage.overview}\r\n            />\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n        <div className='rmdb-home-grid'>\r\n          <FourColGrid\r\n            header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n            loading={this.state.loading}\r\n          >\r\n            {this.state.movies.map((element, i) => {\r\n              return (\r\n                <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={\r\n                    element.poster_path\r\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\r\n                      : './images/no_image.jpg'\r\n                  }\r\n                  movieId={element.id}\r\n                  movieName={element.original_title}\r\n                />\r\n              );\r\n            })}\r\n          </FourColGrid>\r\n          {this.state.loading ? <Spinner /> : null}\r\n          {this.state.currentPage <= this.state.totalPages &&\r\n          !this.state.loading ? (\r\n            <LoadMoreBtn text='Load More' onClick={this.loadMoreItems} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = props => {\r\n  return (\r\n    <div className='rmdb-navigation'>\r\n      <div className='rmdb-navigation-content'>\r\n        <Link to='/'>\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = props => {\r\n  return (\r\n    <div\r\n      className='rmdb-movieinfo'\r\n      style={{\r\n        background: props.movie.backdrop_path\r\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\r\n          : '#000'\r\n      }}\r\n    >\r\n      <div className='rmdb-movieinfo-content'>\r\n        <div className='rmdb-movieinfo-thumb'>\r\n          <MovieThumb\r\n            image={\r\n              props.movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\r\n                : './images/no_image.jpg'\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className='rmdb-movieinfo-text'>\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className='rmdb-rating'>\r\n            <meter\r\n              min='0'\r\n              max='100'\r\n              optimum='100'\r\n              low='40'\r\n              high='70'\r\n              value={props.movie.vote_average * 10}\r\n            ></meter>\r\n            <p className='rmdb-score'>{props.movie.vote_average}</p>\r\n          </div>\r\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n          {props.directors.map((element, i) => {\r\n            return (\r\n              <p key={i} className='rmdb-director'>\r\n                {element.name}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        <FontAwesome className='fa-film' name='film' size='5x' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = props => {\r\n  return (\r\n    <div className='rmdb-movieinfobar'>\r\n      <div className='rmdb-movieinfobar-content'>\r\n        <div className='rmdb-movieinfobar-content-col'>\r\n          <FontAwesome className='fa-time' name='clock-o' size='2x' />\r\n          <span className='rmdb-movieinfobar-info'>\r\n            Running Time: {calcTime(props.time)}\r\n          </span>\r\n        </div>\r\n        <div className='rmdb-movieinfobar-content-col'>\r\n          <FontAwesome className='fa-budget' name='money' size='2x' />\r\n          <span className='rmdb-movieinfobar-info'>\r\n            Budget: {convertMoney(props.budget)}\r\n          </span>\r\n        </div>\r\n        <div className='rmdb-movieinfobar-content-col'>\r\n          <FontAwesome className='fa-revenue' name='ticket' size='2x' />\r\n          <span className='rmdb-movieinfobar-info'>\r\n            Revenue: {convertMoney(props.revenue)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = props => {\r\n  const POSTER_SIZE = 'w154';\r\n\r\n  return (\r\n    <div className='rmdb-actor'>\r\n      <img\r\n        src={\r\n          props.actor.profile_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\r\n            : './images/no_image.jpg'\r\n        }\r\n        alt='actorthumb'\r\n      />\r\n      <span className='rmdb-actor-name'>{props.actor.name}</span>\r\n      <span className='rmdb-actor-character'>{props.actor.character}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actor;\r\n","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    tactors: null,\r\n    directors: [],\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\r\n      const state = JSON.parse(\r\n        localStorage.getItem(`${this.props.match.params.movieId}`)\r\n      );\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      // First fetch the movie\r\n      const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = endpoint => {\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        // console.log(result);\r\n        if (result.status_code) {\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ movie: result }, () => {\r\n            // Then fetch actors in the setState callback function\r\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n            fetch(endpoint)\r\n              .then(result => result.json())\r\n              .then(result => {\r\n                const directors = result.crew.filter(\r\n                  member => member.job === 'Director'\r\n                );\r\n\r\n                this.setState(\r\n                  {\r\n                    actors: result.cast,\r\n                    directors,\r\n                    loading: false\r\n                  },\r\n                  () => {\r\n                    localStorage.setItem(\r\n                      `${this.props.match.params.movieId}`,\r\n                      JSON.stringify(this.state)\r\n                    );\r\n                  }\r\n                );\r\n              });\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='rmdb-movie'>\r\n        {this.state.movie ? (\r\n          <div>\r\n            <Navigation movie={this.props.location.movieName} />\r\n            <MovieInfo\r\n              movie={this.state.movie}\r\n              directors={this.state.directors}\r\n            />\r\n            <MovieInfoBar\r\n              time={this.state.movie.runtime}\r\n              budget={this.state.movie.budget}\r\n              revenue={this.state.movie.revenue}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {this.state.actors ? (\r\n          <div className='rmdb-movie-grid'>\r\n            <FourColGrid header={'Actors'}>\r\n              {this.state.actors.map((element, i) => {\r\n                return <Actor key={i} actor={element} />;\r\n              })}\r\n            </FourColGrid>\r\n          </div>\r\n        ) : null}\r\n        {!this.state.actors && !this.state.loading ? (\r\n          <h1>No Movie Found!</h1>\r\n        ) : null}\r\n        {this.state.loading ? <Spinner /> : null}}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Whopps! This page doesn't exist.</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter basename='/React-RMDB/'>\r\n      <React.Fragment>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/' component={Home} exact />\r\n          <Route path='/:movieId' component={Movie} exact />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </React.Fragment>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}